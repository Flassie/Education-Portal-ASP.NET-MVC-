@model LessonsViewModel

@{
    ViewBag.Title = "Lessons";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";

    var courses = Model.Courses;

    var dropDownCourses = courses.Select(m => new SelectListItem()
    {
        Text = m.Name + " (" + m.Price + "$)",
        Value = m.Id.ToString()
    });

    ViewBag.CoursesDropDownItems = dropDownCourses;
}

<div class="container mt-5">
    <div class="row">
        @Html.Partial("_NewLessonForm", Model.NewLessonViewModel)
    </div>
</div>

<div class="container mt-5">
    <div class="row">
        <div id="accordion" class="col-sm-12">
            @foreach(CourseViewModel course in courses)
            {
                <div class="card">
                    <div class="card-header p-0" id="course-header-@course.Id">
                        <h5 class="mb-0">
                            <button class="btn btn-primary rounded-0 w-100"
                                    data-toggle="collapse"
                                    data-target="#course-body-@course.Id"
                                    aria-expanded="true"
                                    aria-controls="course-body-@course.Id">
                                @course.Name
                            </button>
                        </h5>
                    </div>

                    <div id="course-body-@course.Id" 
                         class="collapse" 
                         aria-labelledby="course-header-@course.Id"
                         data-parent="#accordion">
                        <div class="card-body">
                            <div class="row" id="course-body-data-@course.Id">
                                @if(course.lessons.Count() == 0)
                                {
                                    <h5 class="col-sm-12 text-danger text-center">No available lessons</h5>
                                } else
                                {
                                    foreach(var lesson in course.lessons)
                                    {
                                        @Html.Partial("_LessonCard", lesson)
                                    }
                                }
                            </div>
                        </div>
                    </div>
                </div>
            }
        </div>
    </div>
</div>

<div class="modal fade" id="modal-delete" tabindex="-1" role="dialog" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Delete <span id="modal-lesson-name"></span></h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                Are you sure that you want to delete this lesson?
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-danger" id="modal-delete-accept">Delete</button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        var deleteModal = {
            elem: $("#modal-delete"),
            lessonName: $("#modal-lesson-name"),
            acceptButton: $("#modal-delete-accept"),

            deleteButton: null
        }

        deleteModal.acceptButton.click(function (e) {
            deleteModal.elem.modal("hide");

            if (deleteModal.deleteButton != null) {
                deleteModal.deleteButton.data("accept", true);
                deleteModal.deleteButton.click();
            }
        });

        $("#accordion .collapse:first").addClass("show");

        function onEdit(self) {
            var form = self.closest("form.card");

            var inputs = form.find("input");

            inputs.each(function (i, item) {
                var input = $(item);
                input.attr("data-old-value", input.val());
            });
            inputs.prop("disabled", false);

            form.find(".control-btn-group").hide();
            form.find(".edit-btn-group").show();
        }

        function onSave(self) {
            var form = self.closest("form.card");
            var inputs = form.find("input");

            var isEditted = false;
            for (var i = 0; i < inputs.length && !isEditted; i++) {
                var input = $(inputs[i]);
                isEditted = (input.attr("data-old-value") != input.val());
            }

            if (isEditted) {
                form.submit();
            } else {
                inputs.prop("disabled", true);
                form.find(".control-btn-group").show();
                form.find(".edit-btn-group").hide();
            }
        }

        function onCancel(self) {
            var form = self.closest("form.card");
            var inputs = form.find("input");

            inputs.each(function (i, item) {
                var input = $(item);
                input.val(input.attr("data-old-value"));
            });

            inputs.prop("disabled", true);

            form.find(".control-btn-group").show();
            form.find(".edit-btn-group").hide();
        }

        function onDelete(self) {
            var title = self.closest("form").find(".name-edit").val();
            var url = self.attr("href");
            var accept = self.data("accept");

            var target = self.attr("data-target");

            if (accept == false) {
                deleteModal.lessonName.text(title);
                deleteModal.deleteButton = self;
                deleteModal.elem.modal("show");
            } else {
                $.ajax({
                    url: url,
                    method: "GET",
                    success: function () {
                        $(target).remove();
                    },
                    error: function () {
                        alert("Error while deleting lesson");
                        location.reload(true);
                    }
                })
            }
        }

        $(document).ready(function () {
            var mutationObserver = new MutationObserver(function (mutations) {
                mutations.forEach(function (item) {
                    console.log("HELLO");
                    var addedNode = $(item.addedNodes[0]).find("form.lesson-card");
                    console.log(addedNode);

                    addedNode.find(".btn-edit").click(function (e) {
                        e.preventDefault();
                        var self = $(this);
                        onEdit(self);
                    });
                    addedNode.find(".btn-save").click(function (e) {
                        e.preventDefault();
                        var self = $(this);
                        onSave(self);
                    });
                    addedNode.find(".btn-cancel-edit").click(function (e) {
                        e.preventDefault();
                        var self = $(this);
                        onCancel(self);
                    });
                    addedNode.find(".btn-delete").click(function (e) {
                        e.preventDefault();
                        var self = $(this);
                        onDelete(self);
                    });
                })
            });

            var observerTarget = document.querySelector("#accordion .card-body .row");
            mutationObserver.observe(observerTarget, { childList: true });
        });

        $(document).ready(function () {
            $(".btn-edit").click(function (e) {
                e.preventDefault();
                var self = $(this);
                onEdit(self);
            });

            $(".btn-save").click(function (e) {
                e.preventDefault();
                var self = $(this);
                onSave(self);
            });

            $(".btn-cancel-edit").click(function (e) {
                e.preventDefault();
                var self = $(this);
                onCancel(self);
            });

            $(".btn-delete").click(function (e) {
                e.preventDefault();
                var self = $(this);
                onDelete(self);
            });
        });
    </script>
}